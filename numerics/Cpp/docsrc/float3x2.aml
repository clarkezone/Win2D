<?xml version="1.0"?>
<!--
Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the MIT License. See LICENSE.txt in the project root for license information.
-->

<topic id="WindowsNumerics_float3x2" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>A 3x2 matrix, used for 2D transforms.</para>
      <para>This matrix type uses a row vector layout. The x and y of this matrix's translation vector correspond to the fields m31, m32.</para>
      <para>This type is only available in C++. Its .NET equivalent is <externalLink><linkText>System.Numerics.Matrix3x2</linkText><linkUri>https://msdn.microsoft.com/library/windows/apps/System.Numerics.Matrix3x2</linkUri></externalLink>.</para>
      <para>
        <markup><br/></markup>
        <legacyBold>Namespace:</legacyBold> <link xlink:href="WindowsNumerics">Windows::Foundation::Numerics</link>
        <markup><br/></markup>
        <legacyBold>Header:</legacyBold> WindowsNumerics.h
      </para>
    </introduction>
    
    <section>
      <title>Constructors</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>Name</entry>
              <entry>Description</entry>
            </row>
          </tableHeader>
          <row>
            <entry><codeInline>float3x2()</codeInline></entry>
            <entry>Creates an uninitialized float3x2.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2(float m11, float m12, float m21, float m22, float m31, float m32)</codeInline></entry>
            <entry>Creates a float3x2 with the specified values.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2(Microsoft::&#8203;Graphics::&#8203;Canvas::&#8203;Numerics::&#8203;Matrix3x2 const&amp; value)</codeInline></entry>
            <entry>Converts a Microsoft.Graphics.Canvas.Numerics.Matrix3x2 to a float3x2.</entry>
          </row>
        </table>
      </content>
    </section>

    <section>
      <title>Functions</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>Name</entry>
              <entry>Description</entry>
            </row>
          </tableHeader>
          <row>
            <entry><codeInline>float3x2 make_float3x2_translation(float2 const&amp; position)</codeInline></entry>
            <entry>Creates a translation matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_translation(float xPosition, float yPosition)</codeInline></entry>
            <entry>Creates a translation matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_scale(float xScale, float yScale)</codeInline></entry>
            <entry>Creates a scaling matrix, centered on the origin.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_scale(float xScale, float yScale, float2 const&amp; centerPoint)</codeInline></entry>
            <entry>Creates a scaling matrix, centered on the specified point.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_scale(float2 const&amp; scales)</codeInline></entry>
            <entry>Creates a scaling matrix, centered on the origin.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_scale(float2 const&amp; scales, float2 const&amp; centerPoint)</codeInline></entry>
            <entry>Creates a scaling matrix, centered on the specified point.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_scale(float scale)</codeInline></entry>
            <entry>Creates a scaling matrix, centered on the origin.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_scale(float scale, float2 const&amp; centerPoint)</codeInline></entry>
            <entry>Creates a scaling matrix, centered on the specified point.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_skew(float radiansX, float radiansY)</codeInline></entry>
            <entry>Creates a skew matrix, centered on the origin.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_skew(float radiansX, float radiansY, float2 const&amp; centerPoint)</codeInline></entry>
            <entry>Creates a skew matrix, centered on the specified point.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_rotation(float radians)</codeInline></entry>
            <entry>Creates a rotation matrix, centered on the origin.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 make_float3x2_rotation(float radians, float2 const&amp; centerPoint)</codeInline></entry>
            <entry>Creates a rotation matrix, centered on the specified point.</entry>
          </row>
          <row>
            <entry><codeInline>bool is_identity(float3x2 const&amp; value)</codeInline></entry>
            <entry>Checks whether this is an identity matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float determinant(float3x2 const&amp; value)</codeInline></entry>
            <entry>Calculates the determinant of the matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float2 translation(float3x2 const&amp; value)</codeInline></entry>
            <entry>Gets the translation vector of the matrix.</entry>
          </row>
          <row>
            <entry><codeInline>bool invert(float3x2 const&amp; matrix, _Out_ float3x2* result)</codeInline></entry>
            <entry>Calculates the inverse of a matrix. Returns true if the matrix can be inverted; false otherwise.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 lerp(float3x2 const&amp; matrix1, float3x2 const&amp; matrix2, float amount)</codeInline></entry>
            <entry>Linearly interpolates between the corresponding values of two matrices.</entry>
          </row>
        </table>
      </content>
    </section>
    
    <section>
      <title>Methods</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>Name</entry>
              <entry>Description</entry>
            </row>
          </tableHeader>
          <row>
            <entry><codeInline>static float3x2 identity()</codeInline></entry>
            <entry>Returns an instance of the identity matrix.</entry>
          </row>
        </table>
      </content>
    </section>

    <section>
      <title>Operators</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>Name</entry>
              <entry>Description</entry>
            </row>
          </tableHeader>
          <row>
            <entry><codeInline>float3x2 operator+ (float3x2 const&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>Adds each component of a matrix to another matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 operator- (float3x2 const&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>Subtracts each component of a matrix from another matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 operator* (float3x2 const&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>Multiplies a matrix by another matrix. This has the effect of concatenating two transforms.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 operator* (float3x2 const&amp; value1, float value2)</codeInline></entry>
            <entry>Multiplies each component of a matrix by a scalar value.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2 operator- (float3x2 const&amp; value)</codeInline></entry>
            <entry>Negates each component of a matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2&amp; operator+= (float3x2&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>In-place adds each component of a matrix to another matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2&amp; operator-= (float3x2&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>In-place subtracts each component of a matrix from another matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2&amp; operator*= (float3x2&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>In-place multiplies a matrix by another matrix. This has the effect of concatenating two transforms.</entry>
          </row>
          <row>
            <entry><codeInline>float3x2&amp; operator*= (float3x2&amp; value1, float value2)</codeInline></entry>
            <entry>In-place multiplies each component of a matrix by a scalar value.</entry>
          </row>
          <row>
            <entry><codeInline>bool operator== (float3x2 const&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>Determines whether two instances of float3x2 are equal.</entry>
          </row>
          <row>
            <entry><codeInline>bool operator!= (float3x2 const&amp; value1, float3x2 const&amp; value2)</codeInline></entry>
            <entry>Determines whether two instances of float3x2 are not equal.</entry>
          </row>
          <row>
            <entry><codeInline>operator Microsoft::&#8203;Graphics::&#8203;Canvas::&#8203;Numerics::&#8203;Matrix3x2() const</codeInline></entry>
            <entry>Converts a float3x2 to a Microsoft.Graphics.Canvas.Numerics.Matrix3x2.</entry>
          </row>
        </table>
      </content>
    </section>

    <section>
      <title>Fields</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>Name</entry>
              <entry>Description</entry>
            </row>
          </tableHeader>
          <row>
            <entry><codeInline>float m11</codeInline></entry>
            <entry>Value at row 1 column 1 of the matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float m12</codeInline></entry>
            <entry>Value at row 1 column 2 of the matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float m21</codeInline></entry>
            <entry>Value at row 2 column 1 of the matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float m22</codeInline></entry>
            <entry>Value at row 2 column 2 of the matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float m31</codeInline></entry>
            <entry>Value at row 3 column 1 of the matrix.</entry>
          </row>
          <row>
            <entry><codeInline>float m32</codeInline></entry>
            <entry>Value at row 3 column 2 of the matrix.</entry>
          </row>
        </table>
      </content>
    </section>

  </developerConceptualDocument>
</topic>
